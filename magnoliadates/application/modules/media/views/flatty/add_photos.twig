{% set rand = random(11111, 99999) %}
<div class="content-block load_content">
    <h1>
        {% helper lang.l('add_photos', 'media') %}
    </h1>
    <div class="">
        <form id="item_form{{ rand }}" onsubmit="return;"
              action="" method="post"
              enctype="multipart/form-data" name="item_form" role="form">
            <div class="form-group">
                <div class="f-block">
                    <div id="dnd_upload{{ rand }}" class="drag drag-area-btn">
                        <div id="dndfiles{{ rand }}" class="drag-area">
                            <div class="drag">
                                <div class="upload-btn">
                                    <span data-role="filebutton" class="btn btn-primary">
                                        <s>
                                            {% helper lang.l('btn_choose_file', 'start') %}
                                        </s>
                                        <input type="file" name="multiUpload" id="multiUpload{{ rand }}"
                                               accept="image/*;capture=camera" multiple />
                                    </span>
                                    <p class="mt20">
                                        or {% helper lang.l('drag_photos', 'media') %}
                                    </p>
                                </div>
                                <div class="upload-area">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                    <p>{% helper lang.l('btn_upload_photo', 'media') %}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dnd_upload_info">
                        <p class="text-center max-size">
                            {% if media_config.max_size %}
                                {% helper lang.l('field_max_file_size', 'media') %}
                                {% helper utils.bytesFormat(media_config.max_size) %}
                            {% endif %}
                        </p>
                    </div>
                    <span id="attach-input-error{{ rand }}"></span>
                    <div id="attach-input-warning{{ rand }}"></div>
                </div>
            </div>
            <div id="upload_properties" class="hide">
                <div id="album_content{{ rand }}">
                    <div class="form-group {% if not user_albums %}hide{% endif %}" id="albums_select_block{{ rand }}">
                        <label>
                            {% helper lang.l('albums', 'media') %}:
                        </label>
                        <div id="albums_select{{ rand }}">
                            <select class="form-control input-sm" name="album_id">
                                <option value="0">
                                    {% helper lang.l('please_select', 'media') %}
                                </option>
                                {% for key, item in user_albums %}
                                    <option value="{{ item.id }}" {% if item.id == id_album %}selected{% endif %}>
                                        {{ item.name }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <a class="btn btn-secondary btn-sm" id="create_album_button_aform{{ rand }}" href="javascript:void(0);">
                            {% helper lang.l('create_album', 'media') %}
                        </a>
                        <span class="hide form-inline" id="create_album_container_aform{{ rand }}">
                            <span class="form-group">
                                <input class="form-control input-sm" type="text" name="album_name" id="album_name_aform{{ rand }}">
                            </span>
                            <span class="form-group">
                                <span class="btn btn-primary btn-sm" id="save_album_aform{{ rand }}">{% helper lang.l('btn_apply', 'start') %}</span>
                            </span>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        {% helper lang.l('field_permitted_for', 'media') %}:
                    </label>
                    {% helper ld_permissions = lang.ld('permissions', 'media') %}
                    <select class="form-control input-sm" name="permissions">
                        {% for key, item in ld_permissions.option %}
                        {% if module_frendlist == false %}
                            {% if key != 2 %}
                                <option value="{{key}}"{% if key == 4 %} selected{% endif %}>{{item}}</option>
                            {% endif %}
                        {% else %}
                                <option value="{{key}}"{% if key == 4 %} selected{% endif %}>{{item}}</option>
                        {% endif %}
                    {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label>
                        {% helper lang.l('field_description', 'media') %}:
                    </label>
                    <textarea class="form-control" rows="2" name="description">{{ data.description|e }}</textarea>
                </div>
                <button name="btn_upload" id="btn_upload{{ rand }}" class="btn btn-primary btn-block">
                    {% helper lang.l('btn_save', 'start', '', 'button') %}
                </button>
            </div>
        </form>
    </div>
    <div class="clr"></div>
</div>

{% autoescape false %}
    <script type="text/javascript">
        $(function () {
            loadScripts(
                    [
                        "{% helper utils.jscript('', 'uploader.js', 'path') %}",
                        "{% helper utils.jscript('media', 'albums.js', 'path') %}"
                    ],
                    function () {
                        var lang_data = {
                            data: {
                                description: "{% helper lang.l('field_description', 'media') %}"
                            },
                            errors: {
                                file_missing: "{% helper lang.l('error_file_missing', 'uploads') %}"
                            }
                        };
                        var allowed_mimes = {{ media_config.allowed_mimes|json_encode() }};
                            mu = new uploader({
                                siteUrl: site_url,
                                Accept: 'application/json',
                                uploadUrl: 'media/save_image',
                                zoneId: 'dndfiles{{ rand }}',
                                fileId: 'multiUpload{{ rand }}',
                                formId: 'item_form{{ rand }}',
                                sendType: 'file',
                                sendId: 'btn_upload{{ rand }}',
                                messageId: 'attach-input-error{{ rand }}',
                                warningId: 'attach-input-warning{{ rand }}',
                                maxFileSize: '{{ media_config.max_size }}',
                                mimeType: allowed_mimes,
                                lang: lang_data,
                                langs: {
                                        exceeded: "{% helper lang.l('exceeded', 'media') %}",
                                        mime: "{% helper lang.l('mime', 'media') %}"
                                    },
                                cbOnComplete: function (data) {
                                    if (typeof (data.error) !== 'undefined' && data.error.length !== 0) {
                                        error_object.show_error_block(data.error, 'error');
                                    }                                  
                                },
                                cbOnQueueComplete: function (data) {
                                    if (typeof data !== 'undefined') {                                        
                                        if (window.sitegallery) {
                                            sitegallery.reload();
                                            mediagallery.properties.windowObj.hide_load_block();
                                        } else if (window.mediagallery) {
                                            mediagallery.reload();
                                            mediagallery.properties.windowObj.hide_load_block();
                                        }
                                        
                                        if (window.mediaphoto) {
                                            mediaphoto.properties.windowObj.hide_load_block();
                                        }

                                        if (window.recent_mediagallery) {
                                            recent_mediagallery.refresh_recent_photos();
                                        }
                                        if (window.wall) {
                                            wall.loadEvents('new');
                                        }
                                    }
                                },
                                createThumb: true,
                                thumbWidth: 200,
                                thumbHeight: 200,
                                thumbCrop: false,
                                thumbJpeg: false,
                                thumbBg: 'transparent',
                                fileListInZone: false,
                                filebarHeight: 200,
                                jqueryFormPluginUrl: "{% helper utils.jscript('', 'jquery.form.min.js', 'path') %}",
                                displayFileRow: true,
                                displayAfterProcess: true,
                            });
                        albums_obj = new albums({
                            siteUrl: site_url,
                            contentDiv: '#album_content{{ rand }}',
                            createAlbumButton: '#create_album_button_aform{{ rand }}',
                            createAlbumContainer: '#create_album_container_aform{{ rand }}',
                            saveAlbumButton: '#save_album_aform{{ rand }}',
                            albumNameInput: '#album_name_aform{{ rand }}',
                            create_album_success_request: function (resp) {
                                if (resp.status) {
                                    $('#albums_select{{ rand }}').html(resp.data.albums_select);
                                    $('#albums_select{{ rand }} select').val(resp.data.album_id).prop('selected', 'selected')
                                    $('#albums_select{{ rand }} select').addClass('wp100').addClass('box-sizing');
                                    $('#albums_select_block{{ rand }}').removeClass('hide');

                                    if (mediagallery) {
                                        mediagallery.properties.galleryContentPage = 1,
                                                mediagallery.properties.all_loaded = 0;
                                        mediagallery.load_content(1);
                                        if (resp.data.albums_select && mediagallery.properties.idUser === resp.data.id_user) {
                                            var selected_album = $(mediagallery.properties.albumSelector).val();
                                            $(mediagallery.properties.albumSelectorContainer)
                                                    .html(resp.data.albums_select)
                                                    .val(selected_album)
                                                    .prop('selected', 'selected');
                                        }
                                    }
                                } else {
                                    error_object.show_error_block(resp.errors, 'error');
                                }
                            }
                        });
                    },
                    ['mu', 'albums_obj'],
                    {async: false}
            );
        });
    </script>
{% endautoescape %}
